<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bess.ham.infra.modules.member.MemberMapper">

    <resultMap id="resultMapObj" type="bess.ham.infra.modules.member.Member"></resultMap>
	
	<sql id = "selectCommon">
		FROM member
		WHERE 1=1
		<choose>
			<when test="shDelYn == 2">AND delYn is not null</when>
			<when test="shDelYn != null and !shDelYn.equals('')">AND delYn = #{shDelYn}</when>
		</choose>
	</sql>
	
	<select id="selectList" resultMap="resultMapObj"> 
		<include refid="Base.selectListUpperForMysql"/>
		SELECT
			seq
			,id
			,pw
			,gender
			,authority
			,email
			,numPhone
			,regdate
			,moddate
			,delYn
		<include refid = "selectCommon"/>
		ORDER BY seq ASC
		<include refid ="Base.selectListLowerForMysql"/>
	</select>
	
	
	<insert id="insert">
		INSERT INTO member(
			id
	    	,pw
	    	,gender
	    	,authority
	    	,email
	    	,numPhone
	    	,regdate
	    	,delYn
		)
		
		VALUES (
			#{id}
			,#{pw}
			,#{gender}
			,#{authority}
			,#{email}
			,#{numPhone}
			,NOW()
			,0
		)
		<selectKey resultType="String" keyProperty="seq" order="AFTER">
		SELECT last_insert_id()
		</selectKey>
	</insert>	
	
	<insert id="update">
		UPDATE member
		SET
			id = #{id}
			,pw = #{pw}
			,gender = #{gender}
			,authority = #{authority}
			,email = #{email}
			,numPhone = #{numPhone}
			,moddate = #{moddate}
			,delYn = #{delYn}
		WHERE
			seq = #{seq}
	</insert>
	
	
	<select id="selectOne" resultMap="resultMapObj">
	
	SELECT
		seq
		,id
		,pw
		,gender
		,authority
		,email
		,numPhone
		,delYn
	FROM member 
	WHERE 1=1
	AND seq = #{shSeq}	
	
	</select>
	
	<select id="selectOneCount" resultType="Integer">
		SELECT
			count(*)
		<include refid="selectCommon"/>
	</select>
	
	
	<select id="selectOneIdCheck" resultType="Integer">
		SELECT COUNT(*) 
		FROM member 
		WHERE 1=1 
		AND id = #{id}
	</select>
	
	<!-- _______________user________________ -->
	
	<insert id="insertUser">
		INSERT INTO member(
			id
	    	,pw
	    	,gender
	    	,authority
	    	,email
	    	,numPhone
	    	,regdate
	    	,delYn
		)
		
		VALUES (
			#{id}
			,#{pw}
			,#{gender}
			,#{authority}
			,#{email}
			,#{numPhone}
			,NOW()
			,0
		)
		<selectKey resultType="String" keyProperty="seq" order="AFTER">
		SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<!-- <insert id="insertUserAdress">
		INSERT INTO member_address(
			member_seq
			,address_zipcode
	    	,address_zip
	    	,address_detail
	    	,memo
		)
		
		VALUES (
			member_seq
			,#{address_zipcode}
			,#{address_zip}
			,#{address_detail}
			,#{memo}
		
		)
		<selectKey resultType="String" keyProperty="seq" order="AFTER">
		SELECT last_insert_id()
		</selectKey>
	</insert> -->
	
	<select id="selectOneId" resultMap="resultMapObj">
		SELECT *
		FROM member 
		WHERE 1=1 
		AND id = #{id}
	</select>
	
	
	<select id="selectOneLogin" resultMap="resultMapObj">
	SELECT seq
		,id
		,authority
 	FROM member 
	where 1=1
		AND id = #{id}
		<if test="pw != null and !pw.equals('')">AND pw = #{pw}</if>
	</select>

</mapper>	



